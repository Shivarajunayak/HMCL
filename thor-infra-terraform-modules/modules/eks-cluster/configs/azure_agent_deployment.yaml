---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: azure-agent
  namespace: azure-agent
  labels:
    app.kubernetes.io/name: azure-pipelines-agent
    app.kubernetes.io/instance: agent
spec:
  # replicas: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: azure-pipelines-agent
      app.kubernetes.io/instance: agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: azure-pipelines-agent
        app.kubernetes.io/instance: agent
    spec:
      containers:
        - name: azure-pipelines-agent
          image: "${azure_agent_image_uri}"
          imagePullPolicy: IfNotPresent
          env:
          - name: AZP_AGENT_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: AZP_URL
            valueFrom:
              secretKeyRef:
                name: azure-agent-secret
                key: AZP_URL
          - name: AZP_POOL
            valueFrom:
              secretKeyRef:
                name: azure-agent-secret
                key: AZP_POOL
          - name: AZP_TOKEN
            valueFrom:
              secretKeyRef:
                name: azure-agent-secret
                key: AZP_TOKEN
          volumeMounts:
          - mountPath: /var/run/docker.sock
            name: docker-volume	
          - mountPath: /aws_config
            name: awsconfig-volume
          - mountPath: /mnt/secrets-store
            name: secrets-store-inline
            readOnly: true
      serviceAccountName: azure-agent-sa 
      volumes:
      - name: docker-volume
        hostPath:
          path: /var/run/docker.sock
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: "hmcl-cv-azure-agent-spc"
      - name: awsconfig-volume
        configMap:
          name: awsconfig-configmap
