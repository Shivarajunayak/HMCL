# ---------------------------------------------------------------------------------------------------------------------
# TERRAGRUNT CONFIGURATION
# This is the configuration for Terragrunt, a thin wrapper for Terraform and OpenTofu that helps keep your code DRY and
# maintainable: https://github.com/gruntwork-io/terragrunt
# ---------------------------------------------------------------------------------------------------------------------

# Include the root `terragrunt.hcl` configuration. The root configuration contains settings that are common across all
# components and environments, such as how to configure remote state.

include "root" {
  path = find_in_parent_folders()
}


# Configure the version of the module to use in this environment. This allows you to promote new versions one
# environment at a time (e.g., qa -> stage -> prod).

terraform {
  source = "git@ssh.dev.azure.com:v3/hero-ev-team/CVPI%20-%20Thor%20Infra%20DevOps/thor-infra-terraform-modules//modules/iot/iot-campaign?ref=feature_iot"
}

locals {
  # Automatically load account-level variables
  account_vars = read_terragrunt_config(find_in_parent_folders("account.hcl"))

  # Automatically load region-level variables
  region_vars = read_terragrunt_config(find_in_parent_folders("region.hcl"))

  # Automatically load environment-level variables
  environment_vars = read_terragrunt_config(find_in_parent_folders("env.hcl"))



  # Extract the variables we need for easy access

  aws_account_id   = local.account_vars.locals.aws_account_id
  aws_account_name = local.account_vars.locals.account_name
  aws_region       = local.region_vars.locals.aws_region
  aws_region_short = local.region_vars.locals.aws_region_short
  sso_region       = local.region_vars.locals.sso_region
  deployment_role  = local.account_vars.locals.deployment_role
  environment      = local.environment_vars.locals.environment

}


# Inputs to the source Terraform module

inputs = {

  fleetwise_endpoint_url = "https://controlplane.us-west-2.gamma.kaleidoscope.iot.aws.dev"
  aws_region             = "${local.aws_region}"
  terraform_role_arn     = "arn:aws:iam::${local.aws_account_id}:role/${local.deployment_role}"
  campaign_name          = "hmcl-cv-nonprod-campaign"
  target_arn             = "arn:aws:iotfleetwise:us-west-2:905418263290:fleet/HMCL-SIMTEST-RCV2-2024-95d25548-fleet"
  signal_catalog_arn     = "arn:aws:iotfleetwise:us-west-2:905418263290:signal-catalog/fwdemo-someip-0123b405-signal-catalog"


  campaign_json = {
    "name" : "hmcl-cv-nonprod-campaign",
    "description" : "iot campaign",
    "signalCatalogArn" : "arn:aws:iotfleetwise:us-west-2:905418263290:signal-catalog/fwdemo-someip-0123b405-signal-catalog",
    "targetArn" : "arn:aws:iotfleetwise:us-west-2:905418263290:fleet/fwsim-iot-fw-simulator-fleet",
    "collectionScheme" : {
      "timeBasedCollectionScheme" : {
        "periodMs" : 10000
      }
    },
    "compression" : "OFF",
    "diagnosticsMode" : "OFF",
    "postTriggerCollectionDuration" : 0,
    "priority" : 0,
    "signalsToCollect" : [
      {
        "name" : "TestVehicle.Chassis.Accelerator.PedalPosition",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Chassis.Brake.PedalPosition",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.CurrentLocation.Latitude",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.CurrentLocation.Longitude",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Exterior.AirTemperature",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.OBD.EngineSpeed",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.CombustionEngine.IsRunning",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.CombustionEngine.Torque",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.TractionBattery.Charging.ChargeType",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.TractionBattery.Charging.IsCharging",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.TractionBattery.Charging.IsDischarging",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.TractionBattery.StateOfCharge.Displayed",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.TractionBattery.StateOfHealth",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Powertrain.Transmission.CurrentGear",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.Speed",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.TraveledDistance",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.TripDuration",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      },
      {
        "name" : "TestVehicle.TripMeterReading",
        "maxSampleCount" : 1,
        "minimumSamplingIntervalMs" : 0
      }
    ],
    "spoolingMode" : "OFF",
    "dataDestinationConfigs" : [
      {
        "s3Config" : {
          "bucketArn" : "arn:aws:s3:::fwsim-iot-fw-simulator-bucket-oigtgaft",
          "dataFormat" : "PARQUET",
          "storageCompressionFormat" : "GZIP",
          "prefix" : "fleetwise/DEMO_S3"
        }
      }
    ]
  }
}














